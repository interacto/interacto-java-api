import { ButtonBinder } from "./ButtonBinder";
import { TSInteraction } from "../interaction/TSInteraction";
import { FSM } from "../src-core/fsm/FSM";
import { NodeBinder } from "./NodeBinder";
import { CommandImpl } from "../src-core/command/CommandImpl";
import { AnonCmdBinder } from "./AnonCmdBinder";
import { InteractionData } from "../src-core/interaction/InteractionData";
import { WidgetData } from "../src-core/interaction/WidgetData";
import { CheckBoxBinder } from "./CheckBoxBinder";
import { ColorPickerBinder } from "./ColorPickerBinder";
import { ComboBoxBinder } from "./ComboBoxBinder";
import { KeysData } from "../interaction/library/KeysData";
import { KeyNodeBinder } from "./KeyNodeBinder";
export declare function nodeBinder<D extends InteractionData, C extends CommandImpl, I extends TSInteraction<D, FSM<Event>, {}>>(interaction: I, cmdProducer: (i?: D) => C): NodeBinder<C, I, D>;
export declare function buttonBinder<C extends CommandImpl>(cmdProducer: (i?: WidgetData<Element>) => C): ButtonBinder<C>;
export declare function anonCmdBinder<D extends InteractionData, I extends TSInteraction<D, FSM<Event>, {}>>(interaction: I, cmd: () => void): AnonCmdBinder<I, D>;
export declare function boxCheckedBinder<C extends CommandImpl>(cmdProducer: (i?: WidgetData<Element>) => C): CheckBoxBinder<C>;
export declare function colorPickedBinder<C extends CommandImpl>(cmdProducer: (i?: WidgetData<Element>) => C): ColorPickerBinder<C>;
export declare function comboBoxBinder<C extends CommandImpl>(cmdProducer: (i?: WidgetData<Element>) => C): ComboBoxBinder<C>;
export declare function keyNodeBinder<C extends CommandImpl>(cmdProducer: (i?: KeysData) => C): KeyNodeBinder<C>;
