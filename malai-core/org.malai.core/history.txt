Version 3.0
- port to JavaFX
- Registration policy for commands
- Widget binding
- fixed: problem with concurrent events


*******************************************************************
Version 2.0
- change: Instruments that use Swing widgets should inherits of the class SwingInstrument
- change: Should use the interfaces Instrument, Interactor, and Interaction instead of their implementation class when possible.
  So, the classes Instrument, Interactor, and Interaction have been renamed as InstrumentImpl, InteractorImpl, and InteractionImpl.
- change: API renaming: State, Transition -> StateImpl, TransitionImpl; IState, ITransition, IStateMachine -> State, Transition, StateMachine.
- change: All the interactions and transitions based on key or mouse events have been moved from org.malai.core to org.malai.swing
- change: All the interactions defined in the core module have been moved to org.malai.swing
- change: Not necessary to catch interactor exceptions during their initialization in the operation Instrument::initialiseInteractors.

*******************************************************************
Version 1.3 -- 2014-09-14

- fixed: some transitions of key-based interactions were always triggered
- fixed: infinite loop when continuously pressing a key.
- change: Link renamed as Interactor

*******************************************************************
Version 1.2

- The executing of a command may provoke the execution of other commands.
For instance with a drawing editor, one may want that after having pasting shapes, the new shapes must be selected.
Thus, the command PasteShapes will be followed by a command SelectShapes.
This is the goal of this feature.

*******************************************************************
Version 1.1 - November 4th 2012

- Malai is now separated in several components (core, Swing, android, etc.)
- Two interactions added to the library
- Fixed: command not created when the last event of the interaction permits its creation.

